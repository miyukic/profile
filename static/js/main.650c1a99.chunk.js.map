{"version":3,"sources":["reportWebVitals.js","Icon.tsx","icon.png","Profile.tsx","asets/background.png","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","width","height","image","isCenter","useState","center","undefined","align","mx","bg","margin","padding","src","alt","borderRadius","fallbackSrc","fontFamily","fontSize","Profile","size","console","log","IconPng","shadow","rounded","px","dropShadow","fontStyle","as","href","theme","extendTheme","brand","App","time","windowHeight","setWindHeight","useEffect","window","innerHeight","addEventListener","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","backgroundAttachment","justifyContent","background","bgColor","FontSize","marginBottom","paddingRight","border","textAlign","marginLeft","marginRight","Value","WIDTH","overflow","getWidth","innerWidth","BLANK","ReactDOM","render","StrictMode","document","getElementById","onload"],"mappings":"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","file":"static/js/main.650c1a99.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Box, Circle, Image } from '@chakra-ui/react'\r\nimport { getWidth } from './index'\r\nimport { useState } from 'react';\r\n\r\ninterface IconProps {\r\n    readonly width?: number;\r\n    readonly height?: number;\r\n    readonly image: string;\r\n    readonly isCenter?: boolean;\r\n}\r\n\r\n\r\nconst Icon: React.FC<IconProps> = ({width=100, height=100, image, isCenter=false}: IconProps) => {\r\n    const [size, setSize] = useState<[number, number]>();\r\n    let center: string | undefined = undefined;\r\n    if (isCenter === true) {\r\n        center = \"auto\";\r\n    }\r\n    return (\r\n\r\n        <Box align={\"center\"} width={width}>\r\n            <Circle mx={center}  width={width} height={height} bg={'gray.100'} margin={1}>\r\n                <Image mx={3} padding={3} src={image} alt=\"miyuki\" borderRadius='full' fallbackSrc='https://via.placeholder.com/150' align='center'></Image>\r\n            </Circle>\r\n            <Box fontFamily={'sans-serif'} fontSize={\"3xl\"}>Miyukiumoo</Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Icon;","export default __webpack_public_path__ + \"static/media/icon.db284a8b.png\";","'use strict'\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, Center, Circle, HStack, Stack } from \"@chakra-ui/react\"\r\nimport { Flex } from \"@chakra-ui/react\"\r\nimport Icon from \"./Icon\"\r\nimport IconPng from './icon.png';\r\n\r\nconst Profile: React.VFC = () => {\r\n    const [size, setSize] = useState<number>(200);\r\n\r\n    console.log(\"Profile\");\r\n    return (\r\n        <>\r\n        <Icon image={IconPng} width={size} height={size} isCenter={false}></Icon>\r\n            <Box bg='gray.100' shadow=\"md\" rounded={\"10\"} width={600}>\r\n                <Box margin={4} padding={3}>\r\n                    何者でもなく何者にもなれなかった空っぽの方のみゆき❄ 絵を描きはじめました。自作OSも。気の合う人と繋がれたら嬉しいです。絡んでくれたら… うれしい！プログラミング/動画作り/3DCAD/Windows/.NET/WSL/株/ピアノ/興味のある広くetc.\r\n                </Box>\r\n            </Box>\r\n            <Box px={2} fontSize={20}>\r\n                <HStack dropShadow={'2xl'} fontStyle={'inherit'}>\r\n                    <Box>\r\n                        <Button as=\"a\" href=\"https://twitter.com/Miyukiumoo\" width={20}>Twitter</Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button as=\"a\" href=\"https://github.com/miyukic\" width={20}>GitHub</Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button as=\"a\" href=\"https://www.youtube.com/channel/UCnHC4vCULFtRm3f22hEu5ag\" width={20}>YouTube</Button>\r\n                    </Box>\r\n                </HStack>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/background.db284a8b.png\";","import React, { useEffect, useState } from 'react';\r\nimport Profile from './Profile';\r\nimport bg from \"./asets/background.png\"\r\n\r\nimport { Value } from './index'\r\n\r\n//ChakuraUI プロバイダーの設定\r\nimport { ChakraProvider, extendTheme, Box, Text, Button, Flex } from '@chakra-ui/react';\r\n\r\n/// <reference path=\"./main.ts\">\r\nconst colors = {\r\n    brand: {\r\n        900: '#1a365d',\r\n        800: '#153e75',\r\n        700: '#2a69ac'\r\n    }\r\n}\r\n\r\nconst theme = extendTheme(colors)\r\n\r\n\r\nconst App: React.VFC = () => {\r\n    const [time, setTime] = useState<number>(0);\r\n    const [windowHeight, setWindHeight] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        console.log(\"App useEffect [] time=\" + time);\r\n        setWindHeight(() => window.innerHeight);\r\n        window.addEventListener(\"resize\", () => { console.log(\"windowheight: \" + windowHeight); setWindHeight(() => window.innerHeight) });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [windowHeight])\r\n\r\n    useEffect(() => {\r\n        console.log(\"App useEffect [time] time=\" + time);\r\n    }, [time]);\r\n    console.log(\"App time=\" + time);\r\n    const countUp = () => { setTime((p) => p + 1); };\r\n    //const countDown = () => { setTime((p) => p - 1); };\r\n    const showWindowSize = () => { };\r\n\r\n    let test: number = 0;\r\n\r\n    let jsx = (\r\n        <ChakraProvider theme={theme}>\r\n{/* 背景 */}\r\n            <Box backgroundImage={bg} backgroundPosition={\"100%\"}\r\n                backgroundRepeat={\"no-repeat\"}\r\n                backgroundSize={\"contain\"} backgroundAttachment={\"fixed\"}>\r\n                <Box height={\"100%\"} justifyContent={\"center\"} background={\"rgba(255, 255, 255, 0.5)\"}>\r\n{/* ここからページ内容 */}\r\n{/* 上部のライン */}\r\n            <Box bgColor={\"facebook.100\"} FontSize={4} marginBottom={5} paddingRight={3} border={2} textAlign={\"right\"} height={7}>©miyuki</Box>\r\n{/* メインの領域ボックス */}\r\n                    <Box marginLeft={'auto'} marginRight={'auto'} width={Value.WIDTH} overflow={\"hidden\"}>\r\n                        <Profile></Profile>\r\n                        {/* <Text >現在のカウント&nbsp;{time}</Text>\r\n                        <Text >現在のウィンドウサイズ&nbsp;{windowHeight}</Text>\r\n                        <Box mx={5} my={5}>\r\n                            <Button mx={5} onClick={countUp}>現在のウィンドウサイズ</Button>\r\n                        </Box> */}\r\n{/* SNSのリンク */}\r\n                    </Box>\r\n{/* メインの領域ボックス終了 */}\r\n                </Box>\r\n            </Box>\r\n        </ChakraProvider>\r\n    )\r\n    return jsx;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nimport { ChakraProvider, extendTheme, Box } from '@chakra-ui/react';\n\n//export { default as Profile } from './Profile';\n//ChakuraUI プロバイダーの設定\n\n\nexport class Value {\n    static readonly BLANK: string = \"&nbsp;\";\n    static readonly WIDTH: number = 1920 / 2;\n}\n\nexport function getWidth() {\n    return window.innerWidth;\n}\nconst Hoge = ({p1, p2='デフォルト引数'} : {p1: string, p2?: string}) => {\n    return (\n        <>\n            <p>{p1}</p>\n            <p>{p2}</p>\n        </>\n    )\n}\n\n\nconst render: () => void = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App></App>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrender();\n\n\nwindow.onload = () => {\n    console.log(getWidth());\n    // const el: HTMLElement | null = document.getElementById(\"main\") as HTMLCanvasElement;\n    // if (el == null) return;\n    // const ca: HTMLCanvasElement = el as HTMLCanvasElement;\n    // const g: CanvasRenderingContext2D | null = ca.getContext(\"2d\");\n    // if (g == null) return;\n    // g.font = FONT;\n    // g.fillText(\"Hello World\", 0, 64);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}