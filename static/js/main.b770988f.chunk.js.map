{"version":3,"sources":["reportWebVitals.js","Icon.tsx","icon.png","Profile.tsx","asets/background.png","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","width","height","image","isCenter","useState","center","undefined","imgRef","useRef","useEffect","console","log","align","mx","bg","margin","size","ref","name","padding","src","alt","borderRadius","fallbackSrc","backgroundColor","onClick","current","fontFamily","fontSize","color","Profile","IconPng","shadow","rounded","px","dropShadow","fontStyle","Provider","value","as","href","theme","extendTheme","brand","App","time","windowHeight","setWindHeight","windowWidth","setWindWidth","window","innerHeight","addEventListener","innerWidth","map","x","a","Value","WIDTH","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","backgroundAttachment","minHeight","overflow","justifyContent","background","bgColor","FontSize","marginBottom","paddingRight","border","objectFit","marginLeft","marginRight","paddingTop","getWidth","BLANK","ReactDOM","render","StrictMode","document","getElementById","onload"],"mappings":"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","file":"static/js/main.b770988f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useRef } from 'react';\r\nimport { Avatar, Box, Circle, Image } from '@chakra-ui/react'\r\nimport { getWidth } from './index'\r\nimport { useState } from 'react';\r\n\r\ninterface IconProps {\r\n    readonly width?: number;\r\n    readonly height?: number;\r\n    readonly image: string;\r\n    readonly isCenter?: boolean;\r\n}\r\n\r\n\r\nconst Icon: React.FC<IconProps> = ({width=100, height=100, image, isCenter=false}: IconProps) => {\r\n    const [size, setSize] = useState<[number, number]>();\r\n    let center: string | undefined = undefined;\r\n    if (isCenter === true) {\r\n        center = \"auto\";\r\n    }\r\n\r\n    const imgRef = useRef(null);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (imgRef == null || imgRef == undefined) console.log(\"imgRef は Null または、Undefined です。\");\r\n            //console.log(\"Icon \" + imgRef.current.getBoundingClientRect());\r\n        }\r\n    );\r\n\r\n    return (\r\n\r\n        <Box align={\"center\"} width={width}>\r\n            <Circle mx={center} width={width} height={height} bg={'gray.100'} margin={1}>\r\n                <Avatar size={\"full\"} ref={imgRef} name={\"miyukiumoo\"} mx={3} padding={3} src={image} alt=\"miyuki\" borderRadius='full' fallbackSrc='https://via.placeholder.com/150' align='center' backgroundColor={\"gray.100\"} onClick={() => console.log(imgRef.current)} />\r\n                {/* <Image  name={\"miyukiumoo\"} mx={3} padding={3} src={image} alt=\"miyuki\" borderRadius='full' fallbackSrc='https://via.placeholder.com/150' align='center' onClick={() => console.log(imgRef.current)} /> */}\r\n            </Circle>\r\n            <Box fontFamily={'sans-serif'} fontSize={\"3xl\"} color={'gray.500'}>Miyukiumoo</Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Icon;","export default __webpack_public_path__ + \"static/media/icon.db284a8b.png\";","'use strict'\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, HStack } from \"@chakra-ui/react\"\r\nimport Icon from \"./Icon\"\r\nimport IconPng from './icon.png';\r\nimport { FaTwitter, FaYoutube, FaGithub } from \"react-icons/fa\";\r\nimport { IconContext } from 'react-icons';\r\n\r\nconst Profile: React.VFC = () => {\r\n    const [size, setSize] = useState<number>(200);\r\n\r\n    console.log(\"Profile\");\r\n    return (\r\n        <>\r\n        <Icon image={IconPng} width={size} height={size} isCenter={false}></Icon>\r\n            <Box bg='gray.100' shadow=\"md\" rounded={\"10\"} width={600}>\r\n                <Box margin={4} padding={3}>\r\n                    何者でもなく何者にもなれなかった空っぽの方のみゆき❄ 絵を描きはじめました。自作OSも。気の合う人と繋がれたら嬉しいです。絡んでくれたら… うれしい！プログラミング/動画作り/3DCAD/Windows/.NET/WSL/株/ピアノ/興味のある広くetc.\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box px={2} fontSize={20}>\r\n                <HStack dropShadow={'2xl'} fontStyle={'inherit'}>\r\n\r\n                    <IconContext.Provider value={{ color: '#ccc\"', size: \"\" }}>\r\n                        <Button as=\"a\" href=\"https://twitter.com/Miyukiumoo\">\r\n                            <FaTwitter />\r\n                            &nbsp;\r\n                            Twitter\r\n                            </Button>\r\n                        <Button as=\"a\" href=\"https://github.com/miyukic\">\r\n                            <FaGithub />\r\n                            &nbsp;\r\n                            GitHub\r\n                        </Button>\r\n                        <Button as=\"a\" href=\"https://www.youtube.com/channel/UCnHC4vCULFtRm3f22hEu5ag\">\r\n                            <FaYoutube/>\r\n                            &nbsp;\r\n                            YouTube\r\n                        </Button>\r\n                    </IconContext.Provider>\r\n                </HStack>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/background.db8265e8.png\";","import React, { useEffect, useState } from 'react';\r\nimport Profile from './Profile';\r\nimport bg from \"./asets/background.png\"\r\nimport icon from \"./asets/icon.png\"\r\n\r\nimport { Value } from './index'\r\n\r\n//ChakuraUI プロバイダーの設定\r\nimport { ChakraProvider, extendTheme, Box, Image } from '@chakra-ui/react';\r\n\r\n/// <reference path=\"./main.ts\">\r\nconst colors = {\r\n    brand: {\r\n        900: '#1a365d',\r\n        800: '#153e75',\r\n        700: '#2a69ac'\r\n    }\r\n}\r\n\r\nconst theme = extendTheme(colors)\r\n\r\n\r\nconst App: React.VFC = () => {\r\n    const [time, setTime] = useState<number>(0);\r\n    const [windowHeight, setWindHeight] = useState<number>(0);\r\n    const [windowWidth, setWindWidth] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        setWindHeight(() => window.innerHeight);\r\n        window.addEventListener(\"resize\", () => { setWindHeight(() => window.innerHeight); setWindWidth(() => window.innerWidth) });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [windowHeight])\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Effect windowWidth=\" + windowWidth);\r\n        // if (windowWidth <= 600 && windowWidth > 220) {\r\n        //     Value.WIDTH = 500;\r\n        // } else if (windowWidth <= 700 && windowHeight > 600) {\r\n        //     Value.WIDTH = 600;\r\n        // }\r\n        const f = (a: number) => {\r\n            if (windowWidth <= a && windowWidth > a - 100) {\r\n                Value.WIDTH = a - 100;\r\n            }\r\n        };\r\n        const windWidthList: number[] = [100, 500, 900, 1300, 1700, 2100];\r\n        windWidthList.map((x) => {f(x)});\r\n\r\n    }, [windowWidth]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"App useEffect [time] time=\" + time);\r\n    }, [time]);\r\n    console.log(\"App time=\" + time);\r\n    const countUp = () => { setTime((p) => p + 1); };\r\n    //const countDown = () => { setTime((p) => p - 1); };\r\n    const showWindowSize = () => { };\r\n\r\n    let test: number = 0;\r\n\r\n    let jsx = (\r\n        <ChakraProvider theme={theme}>\r\n{/* 背景 */}\r\n            <Box backgroundImage={bg} backgroundPosition={\"100%\"}\r\n                backgroundRepeat={\"no-repeat\"} backgroundSize={windowHeight/1.5}\r\n                backgroundAttachment={\"fixed\"} minHeight={windowHeight}\r\n                overflow={\"hidden\"}>\r\n                <Box minHeight={windowHeight} height={\"100%\"} justifyContent={\"center\"} background={\"rgba(256, 250, 251, 0.7)\"}>\r\n\r\n{/* ここからページ内容 */}\r\n{/* 上部のライン */}\r\n            <Box bgColor={\"facebook.100\"} FontSize={4} marginBottom={windowHeight/3.8} paddingRight={3}\r\n            border={2} height={7} overflow={\"hidden\"} objectFit={\"cover\"}>\r\n                {/* <Image bgColor={'AppWorkspace'} height={6} paddingTop={1} paddingLeft={2} src={icon} objectFit={\"cover\"}/> */}\r\n                <Box margin={\"0 0 0 auto\"}>©miyuki</Box>\r\n            </Box>\r\n{/* メインの領域ボックス */}\r\n                    <Box marginLeft={'auto'} marginRight={'auto'} width={Value.WIDTH}>\r\n                        <Profile></Profile>\r\n\r\n<Box paddingTop={30} marginBottom={30}>\r\n    <Box>\r\n        イラスト\r\n        <Image></Image>\r\n        <Image></Image>\r\n        <Image></Image>\r\n        <Image></Image>\r\n        {/* <Image>xmlns:cc=\"http://creativecommons.org/ns#\"\r\n\r\n            <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">\r\n                <img alt=\"クリエイティブ・コモンズ・ライセンス\" style={{ borderWidth : 0 }} src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" />\r\n            </a><br />\r\n            <span  property=\"cc:attributionName\">miyukiumoo</span>\r\n            を著作者とするこの <span href=\"http://purl.org/dc/dcmitype/StillImage\" rel=\"dct:type\">作品</span> は <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">クリエイティブ・コモンズの 表示 - 継承 4.0 国際 ライセンス</a>で提供されています。</Image> */}\r\n    </Box>\r\n</Box>\r\n\r\n                        {/* <Text >現在のカウント&nbsp;{time}</Text>\r\n                        <Text >現在のウィンドウサイズ&nbsp;{windowHeight}</Text>\r\n                        <Box mx={5} my={5}>\r\n                            <Button mx={5} onClick={countUp}>現在のウィンドウサイズ</Button>\r\n                        </Box> */}\r\n{/* SNSのリンク */}\r\n                    </Box>\r\n{/* メインの領域ボックス終了 */}\r\n                </Box>\r\n            </Box>\r\n        </ChakraProvider>\r\n    )\r\n    return jsx;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nimport { ChakraProvider, extendTheme, Box } from '@chakra-ui/react';\n\n//export { default as Profile } from './Profile';\n//ChakuraUI プロバイダーの設定\n\n\nexport class Value {\n    static readonly BLANK: string = \"&nbsp;\";\n    static WIDTH: number = 1920 / 2 ;\n}\n\nexport function getWidth() {\n    return window.innerWidth;\n}\nconst Hoge = ({p1, p2='デフォルト引数'} : {p1: string, p2?: string}) => {\n    return (\n        <>\n            <p>{p1}</p>\n            <p>{p2}</p>\n        </>\n    )\n}\n\n\nconst render: () => void = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App></App>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrender();\n\n\nwindow.onload = () => {\n    console.log(getWidth());\n    // const el: HTMLElement | null = document.getElementById(\"main\") as HTMLCanvasElement;\n    // if (el == null) return;\n    // const ca: HTMLCanvasElement = el as HTMLCanvasElement;\n    // const g: CanvasRenderingContext2D | null = ca.getContext(\"2d\");\n    // if (g == null) return;\n    // g.font = FONT;\n    // g.fillText(\"Hello World\", 0, 64);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}