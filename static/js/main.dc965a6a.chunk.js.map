{"version":3,"sources":["reportWebVitals.js","Icon.tsx","icon.png","Profile.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Icon","width","height","image","useState","mx","bg","padding","src","alt","borderRadius","fallbackSrc","align","Profile","size","console","log","IconPng","margin","color","theme","extendTheme","brand","App","time","setTime","useEffect","bgColor","marginLeft","marginRight","Value","WIDTH","my","onClick","p","px","py","fontSize","getWidth","window","innerWidth","BLANK","ReactDOM","render","StrictMode","document","getElementById","onload"],"mappings":"iQAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+BCgBCQ,EAXmB,SAAC,GAA+C,IAAD,IAA7CC,aAA6C,MAAvC,IAAuC,MAAlCC,cAAkC,MAA3B,IAA2B,EAAtBC,EAAsB,EAAtBA,MACvD,EAAwBC,qBAAxB,6BAEA,OAEI,cAAC,IAAD,CAAQC,GAAI,OAASJ,MAAOA,EAAOC,OAAQA,EAAQI,GAAI,WAAvD,SACI,cAAC,IAAD,CAAOD,GAAI,EAAGE,QAAS,EAAGC,IAAKL,EAAOM,IAAI,SAASC,aAAa,OAAOC,YAAY,kCAAkCC,MAAM,cClBxH,MAA0B,iCCuB1BC,EAhBY,WACvB,MAAwBT,mBAAiB,KAAzC,mBAAOU,EAAP,UAGA,OADAC,QAAQC,IAAI,WAER,mCACI,eAAC,IAAD,CAAQV,GAAG,WAAX,UACI,cAAC,EAAD,CAAMH,MAAOc,EAAShB,MAAOa,EAAMZ,OAAQY,IAC3C,cAAC,IAAD,CAAKI,OAAQ,EAAGC,MAAO,OAAvB,qmB,gBCIVC,EAAQC,YARC,CACXC,MAAO,CACH,IAAK,UACL,IAAK,UACL,IAAK,aAkDEC,EA3CQ,WACnB,MAAwBnB,mBAAiB,GAAzC,mBAAOoB,EAAP,KAAaC,EAAb,KACAC,qBAAU,WACNX,QAAQC,IAAI,yBAA2BQ,KACxC,IACHE,qBAAU,WACNX,QAAQC,IAAI,6BAA+BQ,KAC5C,CAACA,IACJT,QAAQC,IAAI,YAAcQ,GAM1B,OACI,eAAC,IAAD,CAAgBJ,MAAOA,EAAvB,UACI,cAAC,IAAD,CAAKlB,OAAQ,EAAGyB,QAAS,YACzB,eAAC,IAAD,CAAKC,WAAY,OAAQC,YAAa,OAAQ5B,MAAO6B,EAAMC,MAA3D,UACA,cAAC,EAAD,IACA,eAAC,IAAD,4DAAqBP,KACrB,eAAC,IAAD,CAAKnB,GAAI,EAAG2B,GAAI,EAAhB,UACI,cAAC,IAAD,CAAQ3B,GAAI,EAAG4B,QAZX,WAAQR,GAAQ,SAACS,GAAD,OAAOA,EAAI,MAY/B,wDACA,cAAC,IAAD,CAAQD,QAXF,WAAQR,GAAQ,SAACS,GAAD,OAAOA,EAAI,MAWjC,2DAEJ,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,SAAU,GAA/B,SACI,eAAC,IAAD,CAAMA,SAAU,GAAhB,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQpC,MAAO,GAAf,uBAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAQA,MAAO,GAAf,sBAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAQA,MAAO,GAAf,4BAIZ,cAAC,IAAD,WC/CC6B,EAAb,kCAKO,SAASQ,IACZ,OAAOC,OAAOC,WANLV,EACOW,MAAgB,SADvBX,EAEOC,MAAgB,IAiBhCW,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAMhCP,OAAOQ,OAAS,WACZhC,QAAQC,IAAIsB,MAahB/C,M","file":"static/js/main.dc965a6a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Box, Circle, Image } from '@chakra-ui/react'\r\nimport { getWidth } from './index'\r\nimport { useState } from 'react';\r\n\r\ninterface IconProps {\r\n    readonly width?: number;\r\n    readonly height?: number;\r\n    readonly image: string;\r\n}\r\n\r\n\r\nconst Icon: React.FC<IconProps> = ({width=100, height=100, image}: IconProps) => {\r\n    const [size, setSize] = useState<[number, number]>();\r\n\r\n    return (\r\n\r\n        <Circle mx={'auto'}  width={width} height={height} bg={'gray.100'}>\r\n            <Image mx={3} padding={3} src={image} alt=\"miyuki\" borderRadius='full' fallbackSrc='https://via.placeholder.com/150' align='center'></Image>\r\n        </Circle>\r\n    )\r\n}\r\n\r\nexport default Icon;","export default __webpack_public_path__ + \"static/media/icon.db284a8b.png\";","'use strict'\r\nimport React, { useState } from 'react';\r\nimport { Box, Center, Circle } from \"@chakra-ui/react\"\r\nimport { Flex } from \"@chakra-ui/react\"\r\nimport Icon from \"./Icon\"\r\nimport IconPng from './icon.png';\r\n\r\nconst Profile: React.VFC = () => {\r\n    const [size, setSize] = useState<number>(200);\r\n\r\n    console.log(\"Profile\");\r\n    return (\r\n        <>\r\n            <Circle bg='gray.100'>\r\n                <Icon image={IconPng} width={size} height={size}></Icon>\r\n                <Box margin={4} color={\"gray\"}>\r\n                    何者でもなく何者にもなれなかった空っぽの方のみゆき❄ 絵を描きはじめました。自作OSも。気の合う人と繋がれたら嬉しいです。絡んでくれたら… うれしい！プログラミング/動画作り/3DCAD/Windows/.NET/WSL/株/ピアノ/興味のある広くetc.\r\n                </Box>\r\n            </Circle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { SetStateAction, useEffect, useState } from 'react';\r\nimport Profile from './Profile';\r\nimport Header from './Header'\r\n\r\nimport { Value } from './index'\r\n\r\n//ChakuraUI プロバイダーの設定\r\nimport { ChakraProvider, extendTheme, Box, Text, Button, AlertTitle, Flex, Circle } from '@chakra-ui/react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n/// <reference path=\"./main.ts\">\r\nconst colors = {\r\n    brand: {\r\n        900: '#1a365d',\r\n        800: '#153e75',\r\n        700: '#2a69ac'\r\n    }\r\n}\r\n\r\nconst theme = extendTheme(colors)\r\n\r\n\r\nconst App: React.VFC = () => {\r\n    const [time, setTime] = useState<number>(0);\r\n    useEffect(() => {\r\n        console.log(\"App useEffect [] time=\" + time);\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(\"App useEffect [time] time=\" + time);\r\n    }, [time])\r\n    console.log(\"App time=\" + time);\r\n    const countUp = () => { setTime((p) => p + 1); }\r\n\r\n    const countDown = () => { setTime((p) => p - 1); }\r\n//console.log(\"App\");\r\n\r\n    return (\r\n        <ChakraProvider theme={theme}>\r\n            <Box height={4} bgColor={'#BBAAAA'}></Box>\r\n            <Box marginLeft={'auto'} marginRight={'auto'} width={Value.WIDTH}>\r\n            <Profile></Profile>\r\n            <Text >現在のカウント&nbsp;{time}</Text>\r\n            <Box mx={5} my={5}>\r\n                <Button mx={5} onClick={countUp}>カウントアップ</Button>\r\n                <Button onClick={countDown}>カウントダウン</Button>\r\n            </Box>\r\n            <Box px={10} py={10} fontSize={20}>\r\n                <Flex fontSize={12}>\r\n                    <Box>\r\n                        <Button width={20}>Twitter</Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button width={20}>GitHub</Button>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button width={20}>YouTube</Button>\r\n                    </Box>\r\n            </Flex>\r\n            </Box>\r\n            <Text></Text>\r\n            </Box>\r\n        </ChakraProvider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nimport { ChakraProvider, extendTheme, Box } from '@chakra-ui/react';\n\n//export { default as Profile } from './Profile';\n//ChakuraUI プロバイダーの設定\n\n\nexport class Value {\n    static readonly BLANK: string = \"&nbsp;\";\n    static readonly WIDTH: number = 1920 / 2;\n}\n\nexport function getWidth() {\n    return window.innerWidth;\n}\nconst Hoge = ({p1, p2='デフォルト引数'} : {p1: string, p2?: string}) => {\n    return (\n        <>\n            <p>{p1}</p>\n            <p>{p2}</p>\n        </>\n    )\n}\n\n\nconst render: () => void = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App></App>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\nrender();\n\n\nwindow.onload = () => {\n    console.log(getWidth());\n    // const el: HTMLElement | null = document.getElementById(\"main\") as HTMLCanvasElement;\n    // if (el == null) return;\n    // const ca: HTMLCanvasElement = el as HTMLCanvasElement;\n    // const g: CanvasRenderingContext2D | null = ca.getContext(\"2d\");\n    // if (g == null) return;\n    // g.font = FONT;\n    // g.fillText(\"Hello World\", 0, 64);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}